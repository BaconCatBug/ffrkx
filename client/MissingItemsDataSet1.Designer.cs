//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FFRKInspector {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("missingItemsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class missingItemsDataSet : global::System.Data.DataSet {
        
        private missing_itemsDataTable tablemissing_items;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public missingItemsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected missingItemsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["missing_items"] != null)) {
                    base.Tables.Add(new missing_itemsDataTable(ds.Tables["missing_items"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public missing_itemsDataTable missing_items {
            get {
                return this.tablemissing_items;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            missingItemsDataSet cln = ((missingItemsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["missing_items"] != null)) {
                    base.Tables.Add(new missing_itemsDataTable(ds.Tables["missing_items"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablemissing_items = ((missing_itemsDataTable)(base.Tables["missing_items"]));
            if ((initTable == true)) {
                if ((this.tablemissing_items != null)) {
                    this.tablemissing_items.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "missingItemsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ffrktestDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablemissing_items = new missing_itemsDataTable();
            base.Tables.Add(this.tablemissing_items);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemissing_items() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            missingItemsDataSet ds = new missingItemsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void missing_itemsRowChangeEventHandler(object sender, missing_itemsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class missing_itemsDataTable : global::System.Data.TypedTableBase<missing_itemsRow> {
            
            private global::System.Data.DataColumn columnequipment_id;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnbase_atk;
            
            private global::System.Data.DataColumn columnbase_mag;
            
            private global::System.Data.DataColumn columnbase_acc;
            
            private global::System.Data.DataColumn columnbase_def;
            
            private global::System.Data.DataColumn columnbase_res;
            
            private global::System.Data.DataColumn columnbase_eva;
            
            private global::System.Data.DataColumn columnbase_mnd;
            
            private global::System.Data.DataColumn columnmax_atk;
            
            private global::System.Data.DataColumn columnmax_mag;
            
            private global::System.Data.DataColumn columnmax_acc;
            
            private global::System.Data.DataColumn columnmax_def;
            
            private global::System.Data.DataColumn columnmax_res;
            
            private global::System.Data.DataColumn columnmax_eva;
            
            private global::System.Data.DataColumn columnmax_mnd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsDataTable() {
                this.TableName = "missing_items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal missing_itemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected missing_itemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn equipment_idColumn {
                get {
                    return this.columnequipment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_atkColumn {
                get {
                    return this.columnbase_atk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_magColumn {
                get {
                    return this.columnbase_mag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_accColumn {
                get {
                    return this.columnbase_acc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_defColumn {
                get {
                    return this.columnbase_def;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_resColumn {
                get {
                    return this.columnbase_res;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_evaColumn {
                get {
                    return this.columnbase_eva;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn base_mndColumn {
                get {
                    return this.columnbase_mnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_atkColumn {
                get {
                    return this.columnmax_atk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_magColumn {
                get {
                    return this.columnmax_mag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_accColumn {
                get {
                    return this.columnmax_acc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_defColumn {
                get {
                    return this.columnmax_def;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_resColumn {
                get {
                    return this.columnmax_res;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_evaColumn {
                get {
                    return this.columnmax_eva;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_mndColumn {
                get {
                    return this.columnmax_mnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsRow this[int index] {
                get {
                    return ((missing_itemsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event missing_itemsRowChangeEventHandler missing_itemsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event missing_itemsRowChangeEventHandler missing_itemsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event missing_itemsRowChangeEventHandler missing_itemsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event missing_itemsRowChangeEventHandler missing_itemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addmissing_itemsRow(missing_itemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsRow Addmissing_itemsRow(
                        uint equipment_id, 
                        string name, 
                        ushort base_atk, 
                        ushort base_mag, 
                        ushort base_acc, 
                        ushort base_def, 
                        ushort base_res, 
                        ushort base_eva, 
                        ushort base_mnd, 
                        ushort max_atk, 
                        ushort max_mag, 
                        ushort max_acc, 
                        ushort max_def, 
                        ushort max_res, 
                        ushort max_eva, 
                        ushort max_mnd) {
                missing_itemsRow rowmissing_itemsRow = ((missing_itemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        equipment_id,
                        name,
                        base_atk,
                        base_mag,
                        base_acc,
                        base_def,
                        base_res,
                        base_eva,
                        base_mnd,
                        max_atk,
                        max_mag,
                        max_acc,
                        max_def,
                        max_res,
                        max_eva,
                        max_mnd};
                rowmissing_itemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmissing_itemsRow);
                return rowmissing_itemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsRow FindByequipment_id(uint equipment_id) {
                return ((missing_itemsRow)(this.Rows.Find(new object[] {
                            equipment_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                missing_itemsDataTable cln = ((missing_itemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new missing_itemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnequipment_id = base.Columns["equipment_id"];
                this.columnname = base.Columns["name"];
                this.columnbase_atk = base.Columns["base_atk"];
                this.columnbase_mag = base.Columns["base_mag"];
                this.columnbase_acc = base.Columns["base_acc"];
                this.columnbase_def = base.Columns["base_def"];
                this.columnbase_res = base.Columns["base_res"];
                this.columnbase_eva = base.Columns["base_eva"];
                this.columnbase_mnd = base.Columns["base_mnd"];
                this.columnmax_atk = base.Columns["max_atk"];
                this.columnmax_mag = base.Columns["max_mag"];
                this.columnmax_acc = base.Columns["max_acc"];
                this.columnmax_def = base.Columns["max_def"];
                this.columnmax_res = base.Columns["max_res"];
                this.columnmax_eva = base.Columns["max_eva"];
                this.columnmax_mnd = base.Columns["max_mnd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnequipment_id = new global::System.Data.DataColumn("equipment_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipment_id);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnbase_atk = new global::System.Data.DataColumn("base_atk", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_atk);
                this.columnbase_mag = new global::System.Data.DataColumn("base_mag", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_mag);
                this.columnbase_acc = new global::System.Data.DataColumn("base_acc", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_acc);
                this.columnbase_def = new global::System.Data.DataColumn("base_def", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_def);
                this.columnbase_res = new global::System.Data.DataColumn("base_res", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_res);
                this.columnbase_eva = new global::System.Data.DataColumn("base_eva", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_eva);
                this.columnbase_mnd = new global::System.Data.DataColumn("base_mnd", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_mnd);
                this.columnmax_atk = new global::System.Data.DataColumn("max_atk", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_atk);
                this.columnmax_mag = new global::System.Data.DataColumn("max_mag", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_mag);
                this.columnmax_acc = new global::System.Data.DataColumn("max_acc", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_acc);
                this.columnmax_def = new global::System.Data.DataColumn("max_def", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_def);
                this.columnmax_res = new global::System.Data.DataColumn("max_res", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_res);
                this.columnmax_eva = new global::System.Data.DataColumn("max_eva", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_eva);
                this.columnmax_mnd = new global::System.Data.DataColumn("max_mnd", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_mnd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnequipment_id}, true));
                this.columnequipment_id.AllowDBNull = false;
                this.columnequipment_id.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 45;
                this.columnbase_atk.AllowDBNull = false;
                this.columnbase_mag.AllowDBNull = false;
                this.columnbase_acc.AllowDBNull = false;
                this.columnbase_def.AllowDBNull = false;
                this.columnbase_res.AllowDBNull = false;
                this.columnbase_eva.AllowDBNull = false;
                this.columnbase_mnd.AllowDBNull = false;
                this.columnmax_atk.AllowDBNull = false;
                this.columnmax_mag.AllowDBNull = false;
                this.columnmax_acc.AllowDBNull = false;
                this.columnmax_def.AllowDBNull = false;
                this.columnmax_res.AllowDBNull = false;
                this.columnmax_eva.AllowDBNull = false;
                this.columnmax_mnd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsRow Newmissing_itemsRow() {
                return ((missing_itemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new missing_itemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(missing_itemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.missing_itemsRowChanged != null)) {
                    this.missing_itemsRowChanged(this, new missing_itemsRowChangeEvent(((missing_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.missing_itemsRowChanging != null)) {
                    this.missing_itemsRowChanging(this, new missing_itemsRowChangeEvent(((missing_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.missing_itemsRowDeleted != null)) {
                    this.missing_itemsRowDeleted(this, new missing_itemsRowChangeEvent(((missing_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.missing_itemsRowDeleting != null)) {
                    this.missing_itemsRowDeleting(this, new missing_itemsRowChangeEvent(((missing_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removemissing_itemsRow(missing_itemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                missingItemsDataSet ds = new missingItemsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "missing_itemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class missing_itemsRow : global::System.Data.DataRow {
            
            private missing_itemsDataTable tablemissing_items;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal missing_itemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemissing_items = ((missing_itemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint equipment_id {
                get {
                    return ((uint)(this[this.tablemissing_items.equipment_idColumn]));
                }
                set {
                    this[this.tablemissing_items.equipment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablemissing_items.nameColumn]));
                }
                set {
                    this[this.tablemissing_items.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_atk {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_atkColumn]));
                }
                set {
                    this[this.tablemissing_items.base_atkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_mag {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_magColumn]));
                }
                set {
                    this[this.tablemissing_items.base_magColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_acc {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_accColumn]));
                }
                set {
                    this[this.tablemissing_items.base_accColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_def {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_defColumn]));
                }
                set {
                    this[this.tablemissing_items.base_defColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_res {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_resColumn]));
                }
                set {
                    this[this.tablemissing_items.base_resColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_eva {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_evaColumn]));
                }
                set {
                    this[this.tablemissing_items.base_evaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort base_mnd {
                get {
                    return ((ushort)(this[this.tablemissing_items.base_mndColumn]));
                }
                set {
                    this[this.tablemissing_items.base_mndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_atk {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_atkColumn]));
                }
                set {
                    this[this.tablemissing_items.max_atkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_mag {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_magColumn]));
                }
                set {
                    this[this.tablemissing_items.max_magColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_acc {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_accColumn]));
                }
                set {
                    this[this.tablemissing_items.max_accColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_def {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_defColumn]));
                }
                set {
                    this[this.tablemissing_items.max_defColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_res {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_resColumn]));
                }
                set {
                    this[this.tablemissing_items.max_resColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_eva {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_evaColumn]));
                }
                set {
                    this[this.tablemissing_items.max_evaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort max_mnd {
                get {
                    return ((ushort)(this[this.tablemissing_items.max_mndColumn]));
                }
                set {
                    this[this.tablemissing_items.max_mndColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class missing_itemsRowChangeEvent : global::System.EventArgs {
            
            private missing_itemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsRowChangeEvent(missing_itemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public missing_itemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FFRKInspector.missingItemsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class missing_itemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public missing_itemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "missing_items";
            tableMapping.ColumnMappings.Add("equipment_id", "equipment_id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("base_atk", "base_atk");
            tableMapping.ColumnMappings.Add("base_mag", "base_mag");
            tableMapping.ColumnMappings.Add("base_acc", "base_acc");
            tableMapping.ColumnMappings.Add("base_def", "base_def");
            tableMapping.ColumnMappings.Add("base_res", "base_res");
            tableMapping.ColumnMappings.Add("base_eva", "base_eva");
            tableMapping.ColumnMappings.Add("base_mnd", "base_mnd");
            tableMapping.ColumnMappings.Add("max_atk", "max_atk");
            tableMapping.ColumnMappings.Add("max_mag", "max_mag");
            tableMapping.ColumnMappings.Add("max_acc", "max_acc");
            tableMapping.ColumnMappings.Add("max_def", "max_def");
            tableMapping.ColumnMappings.Add("max_res", "max_res");
            tableMapping.ColumnMappings.Add("max_eva", "max_eva");
            tableMapping.ColumnMappings.Add("max_mnd", "max_mnd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `missing_items` WHERE ((`equipment_id` = @p1) AND (`name` = @p2) AND (`base_atk` = @p3) AND (`base_mag` = @p4) AND (`base_acc` = @p5) AND (`base_def` = @p6) AND (`base_res` = @p7) AND (`base_eva` = @p8) AND (`base_mnd` = @p9) AND (`max_atk` = @p10) AND (`max_mag` = @p11) AND (`max_acc` = @p12) AND (`max_def` = @p13) AND (`max_res` = @p14) AND (`max_eva` = @p15) AND (`max_mnd` = @p16))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "equipment_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_atk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_acc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_def";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_res";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_eva";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_atk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_acc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_def";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_res";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_eva";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `missing_items` (`equipment_id`, `name`, `base_atk`, `base_mag`, `base_acc`, `base_def`, `base_res`, `base_eva`, `base_mnd`, `max_atk`, `max_mag`, `max_acc`, `max_def`, `max_res`, `max_eva`, `max_mnd`) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "equipment_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_atk";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_acc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_def";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_res";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_eva";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mnd";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_atk";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_acc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_def";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_res";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_eva";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mnd";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `missing_items` SET `equipment_id` = @p1, `name` = @p2, `base_atk` = @p3, `base_mag` = @p4, `base_acc` = @p5, `base_def` = @p6, `base_res` = @p7, `base_eva` = @p8, `base_mnd` = @p9, `max_atk` = @p10, `max_mag` = @p11, `max_acc` = @p12, `max_def` = @p13, `max_res` = @p14, `max_eva` = @p15, `max_mnd` = @p16 WHERE ((`equipment_id` = @p17) AND (`name` = @p18) AND (`base_atk` = @p19) AND (`base_mag` = @p20) AND (`base_acc` = @p21) AND (`base_def` = @p22) AND (`base_res` = @p23) AND (`base_eva` = @p24) AND (`base_mnd` = @p25) AND (`max_atk` = @p26) AND (`max_mag` = @p27) AND (`max_acc` = @p28) AND (`max_def` = @p29) AND (`max_res` = @p30) AND (`max_eva` = @p31) AND (`max_mnd` = @p32))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "equipment_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_atk";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_acc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_def";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_res";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_eva";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mnd";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_atk";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_acc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_def";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_res";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_eva";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mnd";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p17";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "equipment_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p19";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_atk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p20";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p21";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_acc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p22";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_def";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p23";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_res";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p24";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_eva";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p25";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "base_mnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p26";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_atk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p27";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p28";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_acc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p29";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_def";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p30";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_res";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p31";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_eva";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p32";
            param.DbType = global::System.Data.DbType.UInt16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt16;
            param.IsNullable = true;
            param.SourceColumn = "max_mnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::FFRKInspector.Properties.Settings.Default.ffrktestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `equipment_id`, `name`, `base_atk`, `base_mag`, `base_acc`, `base_def`, `b" +
                "ase_res`, `base_eva`, `base_mnd`, `max_atk`, `max_mag`, `max_acc`, `max_def`, `m" +
                "ax_res`, `max_eva`, `max_mnd` FROM `missing_items`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(missingItemsDataSet.missing_itemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual missingItemsDataSet.missing_itemsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            missingItemsDataSet.missing_itemsDataTable dataTable = new missingItemsDataSet.missing_itemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(missingItemsDataSet.missing_itemsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(missingItemsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "missing_items");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    uint p1, 
                    string p2, 
                    ushort p3, 
                    ushort p4, 
                    ushort p5, 
                    ushort p6, 
                    ushort p7, 
                    ushort p8, 
                    ushort p9, 
                    ushort p10, 
                    ushort p11, 
                    ushort p12, 
                    ushort p13, 
                    ushort p14, 
                    ushort p15, 
                    ushort p16) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((uint)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((ushort)(p3));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((ushort)(p4));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((ushort)(p5));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((ushort)(p6));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((ushort)(p7));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((ushort)(p8));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((ushort)(p9));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((ushort)(p10));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((ushort)(p11));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((ushort)(p12));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((ushort)(p13));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((ushort)(p14));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((ushort)(p15));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((ushort)(p16));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    uint p1, 
                    string p2, 
                    ushort p3, 
                    ushort p4, 
                    ushort p5, 
                    ushort p6, 
                    ushort p7, 
                    ushort p8, 
                    ushort p9, 
                    ushort p10, 
                    ushort p11, 
                    ushort p12, 
                    ushort p13, 
                    ushort p14, 
                    ushort p15, 
                    ushort p16) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((uint)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((ushort)(p3));
            this.Adapter.InsertCommand.Parameters[3].Value = ((ushort)(p4));
            this.Adapter.InsertCommand.Parameters[4].Value = ((ushort)(p5));
            this.Adapter.InsertCommand.Parameters[5].Value = ((ushort)(p6));
            this.Adapter.InsertCommand.Parameters[6].Value = ((ushort)(p7));
            this.Adapter.InsertCommand.Parameters[7].Value = ((ushort)(p8));
            this.Adapter.InsertCommand.Parameters[8].Value = ((ushort)(p9));
            this.Adapter.InsertCommand.Parameters[9].Value = ((ushort)(p10));
            this.Adapter.InsertCommand.Parameters[10].Value = ((ushort)(p11));
            this.Adapter.InsertCommand.Parameters[11].Value = ((ushort)(p12));
            this.Adapter.InsertCommand.Parameters[12].Value = ((ushort)(p13));
            this.Adapter.InsertCommand.Parameters[13].Value = ((ushort)(p14));
            this.Adapter.InsertCommand.Parameters[14].Value = ((ushort)(p15));
            this.Adapter.InsertCommand.Parameters[15].Value = ((ushort)(p16));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    uint p1, 
                    string p2, 
                    ushort p3, 
                    ushort p4, 
                    ushort p5, 
                    ushort p6, 
                    ushort p7, 
                    ushort p8, 
                    ushort p9, 
                    ushort p10, 
                    ushort p11, 
                    ushort p12, 
                    ushort p13, 
                    ushort p14, 
                    ushort p15, 
                    ushort p16, 
                    uint p17, 
                    string p18, 
                    ushort p19, 
                    ushort p20, 
                    ushort p21, 
                    ushort p22, 
                    ushort p23, 
                    ushort p24, 
                    ushort p25, 
                    ushort p26, 
                    ushort p27, 
                    ushort p28, 
                    ushort p29, 
                    ushort p30, 
                    ushort p31, 
                    ushort p32) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((uint)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((ushort)(p3));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((ushort)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((ushort)(p5));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((ushort)(p6));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((ushort)(p7));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((ushort)(p8));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((ushort)(p9));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((ushort)(p10));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((ushort)(p11));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((ushort)(p12));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((ushort)(p13));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((ushort)(p14));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((ushort)(p15));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((ushort)(p16));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((uint)(p17));
            if ((p18 == null)) {
                throw new global::System.ArgumentNullException("p18");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(p18));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((ushort)(p19));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((ushort)(p20));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((ushort)(p21));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((ushort)(p22));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((ushort)(p23));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((ushort)(p24));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((ushort)(p25));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((ushort)(p26));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((ushort)(p27));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((ushort)(p28));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((ushort)(p29));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((ushort)(p30));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((ushort)(p31));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((ushort)(p32));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string p2, 
                    ushort p3, 
                    ushort p4, 
                    ushort p5, 
                    ushort p6, 
                    ushort p7, 
                    ushort p8, 
                    ushort p9, 
                    ushort p10, 
                    ushort p11, 
                    ushort p12, 
                    ushort p13, 
                    ushort p14, 
                    ushort p15, 
                    ushort p16, 
                    uint p17, 
                    string p18, 
                    ushort p19, 
                    ushort p20, 
                    ushort p21, 
                    ushort p22, 
                    ushort p23, 
                    ushort p24, 
                    ushort p25, 
                    ushort p26, 
                    ushort p27, 
                    ushort p28, 
                    ushort p29, 
                    ushort p30, 
                    ushort p31, 
                    ushort p32) {
            return this.Update(p17, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private missing_itemsTableAdapter _missing_itemsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public missing_itemsTableAdapter missing_itemsTableAdapter {
            get {
                return this._missing_itemsTableAdapter;
            }
            set {
                this._missing_itemsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._missing_itemsTableAdapter != null) 
                            && (this._missing_itemsTableAdapter.Connection != null))) {
                    return this._missing_itemsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._missing_itemsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(missingItemsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._missing_itemsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.missing_items.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._missing_itemsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(missingItemsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._missing_itemsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.missing_items.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._missing_itemsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(missingItemsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._missing_itemsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.missing_items.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._missing_itemsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(missingItemsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._missing_itemsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._missing_itemsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._missing_itemsTableAdapter != null)) {
                    revertConnections.Add(this._missing_itemsTableAdapter, this._missing_itemsTableAdapter.Connection);
                    this._missing_itemsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._missing_itemsTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._missing_itemsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._missing_itemsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._missing_itemsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._missing_itemsTableAdapter != null)) {
                    this._missing_itemsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._missing_itemsTableAdapter]));
                    this._missing_itemsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591